#+title: Log.gd: A Godot Pretty Printer

[[./docs/assets/Log_logo_4x.png]]

Hey there!

I've been building up a pretty-printer in my Godot games lately - here I'm
breaking it out into a proper godot addon.

You can watch a video covering the initial use-case here: https://youtu.be/5yuEuA6S-Ws


#+name: misc startup logs
#+caption:
[[./docs/assets/misc_startup_logs.png]]

#+name: solver analysis callsite
#+caption:
[[./docs/assets/solver_analysis_callsite.png]]

#+name: pretty solver analysis
#+caption:
[[./docs/assets/solver_analysis_output.png]]


** TLDR: example script and output
Checkout [[file:src/Example.gd][src/Example.gd]] for this code.

~Log.pr()~ colorizes and prints the passed data structures.

*** Example.gd:

#+name: Example.gd
#+caption: ~Log.pr()~ should Just Work in most (all?) cases
[[./docs/assets/example_gd_impl.png]]

~Log.pr()~ should Just Work in most (all?) cases

You can opt-in to pretty printing in your objects by implementing
`to_printable()`,
which gets picked up by Log's static method via duck-typing.

*** Output of Example.gd:

#+name: output of Example.gd
#+caption: ~prn~ (vs ~pr~) adds newlines between values
[[./docs/assets/example_gd_output.png]]

~prn~ (vs ~pr~) adds newlines between values

This makes dictionaries and arrays much more readable at a glance, which speeds
up debugging and reduces eye-strain.
** godot printing resources
- richtextlabel docs with lists of bbcode tags:

https://docs.godotengine.org/en/stable/tutorials/ui/bbcode_in_richtextlabel.html

- print_rich
  supported colors: ~black~, ~red~, ~green~, ~yellow~, ~blue~, ~magenta~, ~pink~, ~purple~, ~cyan~, ~white~, ~orange~, ~gray~
  supported tags: ~b~, ~i~, ~u~, ~s~, ~indent~, ~code~, ~url~, ~center~, ~right~, ~color~, ~bgcolor~, ~fgcolor~
